{
  "address": "0x6F0081adB5161Dd050Ce0B3919403384f4756229",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_base",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_quote",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "name": "getDerivedPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1f5acb6e230bbb78531e73ac18cbf0504a4ecda6f364f954198d2aa4df769506",
  "receipt": {
    "to": null,
    "from": "0x996ee16C7869ee1E1fc330DEF46F07Fbe84717Be",
    "contractAddress": "0x6F0081adB5161Dd050Ce0B3919403384f4756229",
    "transactionIndex": 3,
    "gasUsed": "626708",
    "logsBloom": "0x
    "blockHash": "0xa38826fd983e93ef14560ca5bc47e1e0451389aafc62ff3e5229c5898921712b",
    "transactionHash": "0x1f5acb6e230bbb78531e73ac18cbf0504a4ecda6f364f954198d2aa4df769506",
    "logs": [],
    "blockNumber": 28434337,
    "cumulativeGasUsed": "801398",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ca770aa70a9d4076925801dfca56eb10",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_base\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quote\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"name\":\"getDerivedPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"THIS EXAMPLE USES UN-AUDITED CODE. Network: Kovan Base: BTC/USD Base Address: 0x6135b13325bfC4B00278B4abC5e20bbce2D6580e Quote: EUR/USD Quote Address: 0x0c15Ab9A0DB086e062194c273CC79f41597Bbf13 Decimals: 8\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceConverter.sol\":\"PriceConverter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8\\n    );\\n\\n  function description()\\n    external\\n    view\\n    returns (\\n      string memory\\n    );\\n\\n  function version()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(\\n    uint80 _roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0xe6f5ac8c47f3b9b6135051efb9216f9ba5b312a6ecc20209b4f66a780443c328\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n/**\\n * THIS EXAMPLE USES UN-AUDITED CODE.\\n * Network: Kovan\\n * Base: BTC/USD\\n * Base Address: 0x6135b13325bfC4B00278B4abC5e20bbce2D6580e\\n * Quote: EUR/USD\\n * Quote Address: 0x0c15Ab9A0DB086e062194c273CC79f41597Bbf13\\n * Decimals: 8\\n */\\n\\ncontract PriceConverter {\\n    function getDerivedPrice(address _base, address _quote, uint8 _decimals)\\n        public\\n        view\\n        returns (int256)\\n    {\\n        require(_decimals > uint8(0) && _decimals <= uint8(18), \\\"Invalid _decimals\\\");\\n        int256 decimals = int256(10 ** uint256(_decimals));\\n        ( , int256 basePrice, , , ) = AggregatorV3Interface(_base).latestRoundData();\\n        uint8 baseDecimals = AggregatorV3Interface(_base).decimals();\\n        basePrice = scalePrice(basePrice, baseDecimals, _decimals);\\n\\n        ( , int256 quotePrice, , , ) = AggregatorV3Interface(_quote).latestRoundData();\\n        uint8 quoteDecimals = AggregatorV3Interface(_quote).decimals();\\n        quotePrice = scalePrice(quotePrice, quoteDecimals, _decimals);\\n\\n        return basePrice * decimals / quotePrice;\\n    }\\n\\n    function scalePrice(int256 _price, uint8 _priceDecimals, uint8 _decimals)\\n        internal\\n        pure\\n        returns (int256)\\n    {\\n        if (_priceDecimals < _decimals) {\\n            return _price * int256(10 ** uint256(_decimals - _priceDecimals));\\n        } else if (_priceDecimals > _decimals) {\\n            return _price / int256(10 ** uint256(_priceDecimals - _decimals));\\n        }\\n        return _price;\\n    }\\n}\",\"keccak256\":\"0x4cd0eb636db6487ef27b441d59925ab49dbaa9f838a92812eefdefefb77b2c75\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a6b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639743665514610030575b600080fd5b61004a60048036038101906100459190610421565b610060565b604051610057919061054e565b60405180910390f35b60008060ff168260ff1611801561007e5750601260ff168260ff1611155b6100bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b490610569565b60405180910390fd5b60008260ff16600a6100cf9190610657565b905060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561011957600080fd5b505afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101519190610474565b50505091505060008673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561019f57600080fd5b505afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d791906104ef565b90506101e4828287610320565b915060008673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561022e57600080fd5b505afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610474565b50505091505060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec91906104ef565b90506102f9828289610320565b91508185856103089190610775565b610312919061059a565b955050505050509392505050565b60008160ff168360ff16101561035d57828261033c919061088c565b60ff16600a61034b9190610657565b846103569190610775565b905061039c565b8160ff168360ff161115610398578183610377919061088c565b60ff16600a6103869190610657565b84610391919061059a565b905061039c565b8390505b9392505050565b6000813590506103b2816109c2565b92915050565b6000815190506103c7816109d9565b92915050565b6000815190506103dc816109f0565b92915050565b6000813590506103f181610a07565b92915050565b60008151905061040681610a1e565b92915050565b60008151905061041b81610a07565b92915050565b60008060006060848603121561043a57610439610987565b5b6000610448868287016103a3565b9350506020610459868287016103a3565b925050604061046a868287016103e2565b9150509250925092565b600080600080600060a086880312156104905761048f610987565b5b600061049e888289016103f7565b95505060206104af888289016103b8565b94505060406104c0888289016103cd565b93505060606104d1888289016103cd565b92505060806104e2888289016103f7565b9150509295509295909350565b60006020828403121561050557610504610987565b5b60006105138482850161040c565b91505092915050565b610525816108d2565b82525050565b6000610538601183610589565b915061054382610999565b602082019050919050565b6000602082019050610563600083018461051c565b92915050565b600060208201905081810360008301526105828161052b565b9050919050565b600082825260208201905092915050565b60006105a5826108d2565b91506105b0836108d2565b9250826105c0576105bf610958565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156105f9576105f8610929565b5b828205905092915050565b6000808291508390505b600185111561064e5780860481111561062a57610629610929565b5b60018516156106395780820291505b80810290506106478561098c565b945061060e565b94509492505050565b6000610662826108fc565b915061066d836108fc565b925061069a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846106a2565b905092915050565b6000826106b2576001905061076e565b816106c0576000905061076e565b81600181146106d657600281146106e05761070f565b600191505061076e565b60ff8411156106f2576106f1610929565b5b8360020a91508482111561070957610708610929565b5b5061076e565b5060208310610133831016604e8410600b84101617156107445782820a90508381111561073f5761073e610929565b5b61076e565b6107518484846001610604565b9250905081840481111561076857610767610929565b5b81810290505b9392505050565b6000610780826108d2565b915061078b836108d2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156107ca576107c9610929565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561080757610806610929565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561084457610843610929565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561088157610880610929565b5b828202905092915050565b600061089782610906565b91506108a283610906565b9250828210156108b5576108b4610929565b5b828203905092915050565b60006108cb826108dc565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f496e76616c6964205f646563696d616c73000000000000000000000000000000600082015250565b6109cb816108c0565b81146109d657600080fd5b50565b6109e2816108d2565b81146109ed57600080fd5b50565b6109f9816108fc565b8114610a0457600080fd5b50565b610a1081610906565b8114610a1b57600080fd5b50565b610a2781610913565b8114610a3257600080fd5b5056fea2646970667358221220e02a4f3f75662227e32e98e9f6ae4fcd71ffaf4598a5fd96ec56202db1bcfdad64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80639743665514610030575b600080fd5b61004a60048036038101906100459190610421565b610060565b604051610057919061054e565b60405180910390f35b60008060ff168260ff1611801561007e5750601260ff168260ff1611155b6100bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b490610569565b60405180910390fd5b60008260ff16600a6100cf9190610657565b905060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561011957600080fd5b505afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101519190610474565b50505091505060008673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561019f57600080fd5b505afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d791906104ef565b90506101e4828287610320565b915060008673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561022e57600080fd5b505afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610474565b50505091505060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec91906104ef565b90506102f9828289610320565b91508185856103089190610775565b610312919061059a565b955050505050509392505050565b60008160ff168360ff16101561035d57828261033c919061088c565b60ff16600a61034b9190610657565b846103569190610775565b905061039c565b8160ff168360ff161115610398578183610377919061088c565b60ff16600a6103869190610657565b84610391919061059a565b905061039c565b8390505b9392505050565b6000813590506103b2816109c2565b92915050565b6000815190506103c7816109d9565b92915050565b6000815190506103dc816109f0565b92915050565b6000813590506103f181610a07565b92915050565b60008151905061040681610a1e565b92915050565b60008151905061041b81610a07565b92915050565b60008060006060848603121561043a57610439610987565b5b6000610448868287016103a3565b9350506020610459868287016103a3565b925050604061046a868287016103e2565b9150509250925092565b600080600080600060a086880312156104905761048f610987565b5b600061049e888289016103f7565b95505060206104af888289016103b8565b94505060406104c0888289016103cd565b93505060606104d1888289016103cd565b92505060806104e2888289016103f7565b9150509295509295909350565b60006020828403121561050557610504610987565b5b60006105138482850161040c565b91505092915050565b610525816108d2565b82525050565b6000610538601183610589565b915061054382610999565b602082019050919050565b6000602082019050610563600083018461051c565b92915050565b600060208201905081810360008301526105828161052b565b9050919050565b600082825260208201905092915050565b60006105a5826108d2565b91506105b0836108d2565b9250826105c0576105bf610958565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156105f9576105f8610929565b5b828205905092915050565b6000808291508390505b600185111561064e5780860481111561062a57610629610929565b5b60018516156106395780820291505b80810290506106478561098c565b945061060e565b94509492505050565b6000610662826108fc565b915061066d836108fc565b925061069a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846106a2565b905092915050565b6000826106b2576001905061076e565b816106c0576000905061076e565b81600181146106d657600281146106e05761070f565b600191505061076e565b60ff8411156106f2576106f1610929565b5b8360020a91508482111561070957610708610929565b5b5061076e565b5060208310610133831016604e8410600b84101617156107445782820a90508381111561073f5761073e610929565b5b61076e565b6107518484846001610604565b9250905081840481111561076857610767610929565b5b81810290505b9392505050565b6000610780826108d2565b915061078b836108d2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156107ca576107c9610929565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561080757610806610929565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561084457610843610929565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561088157610880610929565b5b828202905092915050565b600061089782610906565b91506108a283610906565b9250828210156108b5576108b4610929565b5b828203905092915050565b60006108cb826108dc565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b60008160011c9050919050565b7f496e76616c6964205f646563696d616c73000000000000000000000000000000600082015250565b6109cb816108c0565b81146109d657600080fd5b50565b6109e2816108d2565b81146109ed57600080fd5b50565b6109f9816108fc565b8114610a0457600080fd5b50565b610a1081610906565b8114610a1b57600080fd5b50565b610a2781610913565b8114610a3257600080fd5b5056fea2646970667358221220e02a4f3f75662227e32e98e9f6ae4fcd71ffaf4598a5fd96ec56202db1bcfdad64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "THIS EXAMPLE USES UN-AUDITED CODE. Network: Kovan Base: BTC/USD Base Address: 0x6135b13325bfC4B00278B4abC5e20bbce2D6580e Quote: EUR/USD Quote Address: 0x0c15Ab9A0DB086e062194c273CC79f41597Bbf13 Decimals: 8",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}